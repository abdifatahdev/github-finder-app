{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/react-course/traversy-media/github-finder/src/components/users/User.jsx\";\nimport React, { Fragment, Component } from \"react\"; // Bring spinner comp, coz if the user hasn't been fetched yet, we wanna show the spinner:\n\nimport Spinner from \"../layout/Spinner\"; // Also let's bring propTypes\n\nimport PropTypes from \"prop-types\"; // Bring in Link:\n\nimport { Link } from \"react-router-dom\"; //Bring repos comp:\n\nimport Repos from \"../repos/Repos\";\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login); // Call getUserRepos() from app.jsx\n\n    this.props.getUserRepos(this.props.match.params.login);\n  } // Add propTypes:\n\n\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable\n    } = this.props.user; // repos shouldn't just be repos it's part of our props which we can actually pull out.\n\n    const {\n      fetching,\n      repos\n    } = this.props; // If the fetching is true, return Spinner:\n\n    if (fetching) return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 26\n      }\n    });\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Back To Search\"), \"Hireable:\", \" \", hireable ? /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-check text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-times-circle text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card grid-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"all-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatar_url,\n      className: \"round-img\",\n      alt: \"\",\n      style: {\n        width: \"150px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Location: \", location)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, bio && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Bio\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, bio)), /*#__PURE__*/React.createElement(\"a\", {\n      href: html_url,\n      className: \"btn btn-dark my-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Visit Github Profile\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, login && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Username: \"), \" \", login)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, company && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Company: \"), \" \", company)), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, blog && /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Website: \"), \" \", blog))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge badge-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Followers: \", followers), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge badge-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Following: \", following), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge badge-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Public Repos: \", public_repos), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge badge-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, \"Public Gists: \", public_gists)), /*#__PURE__*/React.createElement(Repos, {\n      repos: repos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nUser.propTypes = {\n  fetching: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  // added repos propTypes.\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  // added getUserRepos propTypes.\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User; // Create user component UI & layout:\n// Get the users end points (Create Repos and ReposItem component)","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/react-course/traversy-media/github-finder/src/components/users/User.jsx"],"names":["React","Fragment","Component","Spinner","PropTypes","Link","Repos","User","componentDidMount","props","getUser","match","params","login","getUserRepos","render","name","company","avatar_url","location","bio","blog","html_url","followers","following","public_repos","public_gists","hireable","user","fetching","repos","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\n// Bring spinner comp, coz if the user hasn't been fetched yet, we wanna show the spinner:\nimport Spinner from \"../layout/Spinner\";\n// Also let's bring propTypes\nimport PropTypes from \"prop-types\";\n// Bring in Link:\nimport { Link } from \"react-router-dom\";\n//Bring repos comp:\nimport Repos from \"../repos/Repos\";\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.getUser(this.props.match.params.login);\n    // Call getUserRepos() from app.jsx\n    this.props.getUserRepos(this.props.match.params.login);\n  }\n  // Add propTypes:\n  static propTypes = {\n    fetching: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    // added repos propTypes.\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    // added getUserRepos propTypes.\n    getUserRepos: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const {\n      name,\n      company,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      login,\n      html_url,\n      followers,\n      following,\n      public_repos,\n      public_gists,\n      hireable,\n    } = this.props.user;\n\n    // repos shouldn't just be repos it's part of our props which we can actually pull out.\n    const { fetching, repos } = this.props;\n\n    // If the fetching is true, return Spinner:\n    if (fetching) return <Spinner />;\n\n    return (\n      <Fragment>\n        {/* Link tags help users still there when we hit back to search */}\n        <Link to=\"/\" className=\"btn btn-light\">\n          Back To Search\n        </Link>\n        {/* We want to have check mark if the user is hireable */}\n        Hireable:{\" \"}\n        {hireable ? (\n          <i className=\"fas fa-check text-success\" />\n        ) : (\n          <i className=\"fas fa-times-circle text-danger\" />\n        )}\n        {/* Create a card to show user info*/}\n        <div className=\"card grid-2\">\n          <div className=\"all-center\">\n            <img\n              src={avatar_url}\n              className=\"round-img\"\n              alt=\"\"\n              style={{ width: \"150px\" }}\n            />\n\n            {/* Add avatar name and location: */}\n            <h1>{name}</h1>\n            <p>Location: {location}</p>\n          </div>\n\n          {/* Create bio section */}\n          <div>\n            {/* The user may not have a bio, if there is one, put a Fragment */}\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n\n            {/* Here we gonna have a link to the actual github profile */}\n            <a href={html_url} className=\"btn btn-dark my-1\">\n              Visit Github Profile\n            </a>\n\n            {/* Create ul for username, company and website: */}\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong> {login}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong> {company}\n                  </Fragment>\n                )}\n              </li>\n\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong> {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        {/* Create another card that has number of followers, following repos: */}\n        <div className=\"card text-center\">\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\n          <div className=\"badge badge-success\">Following: {following}</div>\n          <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n          <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\n        </div>\n        {/* repos shouldn't just be repos it's part of our props which we can actually pull out. */}\n        <Repos repos={repos} />\n      </Fragment>\n    );\n  }\n}\n\nexport default User;\n\n// Create user component UI & layout:\n\n// Get the users end points (Create Repos and ReposItem component)\n"]},"metadata":{},"sourceType":"module"}