{"ast":null,"code":"var _jsxFileName = \"/Users/abdifatahdev/Desktop/react-course/traversy-media/github-finder/class_component/src/App.jsx\";\nimport React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport User from \"./components/users/User\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      //Create an empty repos array:\n      repos: [],\n      fetching: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        fetching: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        users: res.data.items,\n        fetching: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        fetching: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n      this.setState({\n        user: res.data,\n        fetching: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        fetching: true\n      });\n      const res = await axios.get( // Instead of ${username}?client_id, I chnaged into ${username}/repos?per_page=5&sort=created:asc&client_id\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // Instead of user state, we gonna create repos state\n\n      this.setState({\n        repos: res.data,\n        fetching: false\n      });\n    };\n\n    this.clearUsers = () => this.setState({\n      users: [],\n      fetching: false\n    });\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg,\n          type\n        }\n      });\n      setTimeout(() => this.setState({\n        alert: null\n      }), 5000);\n    };\n  }\n\n  render() {\n    //pull out repos state from this.state\n    const {\n      users,\n      user,\n      repos,\n      fetching,\n      alert\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      alert: alert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        searchUsers: this.searchUsers,\n        clearUsers: this.clearUsers,\n        showClear: users.length > 0 ? true : false,\n        setAlert: this.setAlert,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Users, {\n        fetching: fetching,\n        users: users,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/user/:login\",\n      render: props => /*#__PURE__*/React.createElement(User, Object.assign({}, props, {\n        getUser: this.getUser // Call getUserRepos within our user comp\n        ,\n        getUserRepos: this.getUserRepos,\n        user: user // Also pass in repos state here:\n        ,\n        repos: repos,\n        fetching: fetching,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App; // Create user component UI & layout:","map":{"version":3,"sources":["/Users/abdifatahdev/Desktop/react-course/traversy-media/github-finder/class_component/src/App.jsx"],"names":["React","Fragment","Component","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","state","users","user","repos","fetching","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","render","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport User from \"./components/users/User\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  //This is our global state:\n  state = {\n    users: [],\n    user: {},\n    //Create an empty repos array:\n    repos: [],\n    fetching: false,\n    alert: null,\n  };\n\n  searchUsers = async text => {\n    this.setState({ fetching: true });\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    this.setState({ users: res.data.items, fetching: false });\n  };\n\n  getUser = async username => {\n    this.setState({ fetching: true });\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    this.setState({ user: res.data, fetching: false });\n  };\n\n  // Create get users Repos method:\n  getUserRepos = async username => {\n    this.setState({ fetching: true });\n\n    const res = await axios.get(\n      // Instead of ${username}?client_id, I chnaged into ${username}/repos?per_page=5&sort=created:asc&client_id\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=\n        ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=\n        ${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n    // Instead of user state, we gonna create repos state\n    this.setState({ repos: res.data, fetching: false });\n  };\n\n  clearUsers = () => this.setState({ users: [], fetching: false });\n\n  setAlert = (msg, type) => {\n    this.setState({ alert: { msg, type } });\n    setTimeout(() => this.setState({ alert: null }), 5000);\n  };\n\n  render() {\n    //pull out repos state from this.state\n    const { users, user, repos, fetching, alert } = this.state;\n\n    return (\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Fragment>\n                  <Search\n                    searchUsers={this.searchUsers}\n                    clearUsers={this.clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={this.setAlert}\n                  />\n                  <Users fetching={fetching} users={users} />\n                </Fragment>\n              )}\n            />\n\n            <Route exact path=\"/about\" component={About} />\n\n            <Route\n              exact\n              path=\"/user/:login\"\n              render={props => (\n                <User\n                  {...props}\n                  getUser={this.getUser}\n                  // Call getUserRepos within our user comp\n                  getUserRepos={this.getUserRepos}\n                  user={user}\n                  // Also pass in repos state here:\n                  repos={repos}\n                  fetching={fetching}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// Create user component UI & layout:\n"]},"metadata":{},"sourceType":"module"}